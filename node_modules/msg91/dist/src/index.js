"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = require("../axios");
var Msg91 = /** @class */ (function () {
    function Msg91() {
        this.initialized = false;
    }
    Msg91.prototype.initialize = function (options) {
        if (this.initialized)
            throw new Error("MSG91 already initialized");
        this.authKey = options.authKey;
        (options === null || options === void 0 ? void 0 : options.pluginsource) && (0, axios_1.setPluginSource)(options.pluginsource); // Set custom plugin source
        this.initialized = true;
    };
    Msg91.prototype.validateInit = function () {
        if (!this.initialized)
            throw new Error("Call the initialize() first");
    };
    Msg91.prototype.getCampaign = function (options) {
        this.validateInit();
        return new Campaign((options === null || options === void 0 ? void 0 : options.authKey) || this.authKey || "");
    };
    Msg91.prototype.getOTP = function (templateId, options) {
        this.validateInit();
        return new Otp(templateId, (options === null || options === void 0 ? void 0 : options.authKey) || this.authKey || "", { length: options === null || options === void 0 ? void 0 : options.length });
    };
    Msg91.prototype.getSMS = function (options) {
        this.validateInit();
        return new Sms((options === null || options === void 0 ? void 0 : options.authKey) || this.authKey || "");
    };
    return Msg91;
}());
var Sms = /** @class */ (function () {
    function Sms(authKey) {
        this.authKey = authKey;
    }
    Sms.prototype.send = function (flowId, recipient, options) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://api.msg91.com/api/v5/flow/");
            var data = {
                flow_id: flowId,
            };
            if (!Array.isArray(recipient)) {
                data = __assign(__assign(__assign({}, data), recipient), { 'mobiles': recipient.mobile });
            }
            else {
                data.recipients = recipient;
            }
            if (options === null || options === void 0 ? void 0 : options.senderId)
                data.sender = options.senderId;
            if ((options === null || options === void 0 ? void 0 : options.shortURL) != null)
                data.short_url = options.shortURL ? '1' : '0';
            var config = {
                method: 'post',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                },
                data: JSON.stringify(data)
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    return Sms;
}());
var Campaign = /** @class */ (function () {
    function Campaign(authKey) {
        this.authKey = authKey;
    }
    Campaign.prototype.getAll = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var campaigns, currentPage, totalPage, url, config, data, hasError, errors, status_1, _b, pageNo, totalPageCount, result, error_1;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        campaigns = [];
                        currentPage = 1;
                        totalPage = 1;
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 5, , 6]);
                        _c.label = 2;
                    case 2:
                        if (!(currentPage <= totalPage)) return [3 /*break*/, 4];
                        url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns");
                        url.searchParams.set("pageNo", String(currentPage));
                        config = {
                            method: 'get',
                            url: url.toString(),
                            headers: {
                                authkey: this.authKey
                            }
                        };
                        return [4 /*yield*/, (0, axios_1.default)(config)];
                    case 3:
                        data = (_c.sent()).data;
                        hasError = data.hasError, errors = data.errors, status_1 = data.status;
                        _b = (data === null || data === void 0 ? void 0 : data.data) || {}, pageNo = _b.pageNo, totalPageCount = _b.totalPageCount;
                        if (status_1 === "error" || hasError) {
                            return [2 /*return*/, Promise.reject({ errors: errors })];
                        }
                        result = ((_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.data) || [];
                        campaigns.push.apply(campaigns, result);
                        totalPage = Number(totalPageCount || 0);
                        currentPage = Number(pageNo) + 1;
                        return [3 /*break*/, 2];
                    case 4: return [2 /*return*/, campaigns];
                    case 5:
                        error_1 = _c.sent();
                        return [2 /*return*/, Promise.reject(error_1)];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    Campaign.prototype.getFields = function (slug) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns/".concat(slug, "/fields"));
            var config = {
                method: 'get',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                }
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var hasError = data.hasError, errors = data.errors, status = data.status;
                switch (status) {
                    case "success":
                        return resolve(data === null || data === void 0 ? void 0 : data.data);
                        break;
                    case "error":
                        return reject({ errors: errors });
                        break;
                    default:
                        return resolve(data === null || data === void 0 ? void 0 : data.data);
                        break;
                }
            })
                .catch(function (error) {
                console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.getBody = function (slug) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns/".concat(slug, "/snippets"));
            var config = {
                method: 'get',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                }
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var _b, _c, _d, _e;
                var data = _a.data;
                var hasError = data.hasError, errors = data.errors, status = data.status;
                switch (status) {
                    case "success":
                        return resolve((_c = (_b = data === null || data === void 0 ? void 0 : data.data) === null || _b === void 0 ? void 0 : _b.requestBody) === null || _c === void 0 ? void 0 : _c.data);
                        break;
                    case "error":
                        return reject({ errors: errors });
                        break;
                    default:
                        return resolve((_e = (_d = data === null || data === void 0 ? void 0 : data.data) === null || _d === void 0 ? void 0 : _d.requestBody) === null || _e === void 0 ? void 0 : _e.data);
                        break;
                }
            })
                .catch(function (error) {
                console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.run = function (slug, body) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns/".concat(slug, "/run"));
            var data = JSON.stringify(body);
            var config = {
                method: 'post',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                },
                data: data
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.send = function (slug, body) {
        return this.run(slug, body);
    };
    return Campaign;
}());
var Otp = /** @class */ (function () {
    function Otp(templateId, authkey, options) {
        this.length = 4;
        this.templateId = templateId;
        this.authkey = authkey;
        this.length = (options === null || options === void 0 ? void 0 : options.length) || this.length;
    }
    Otp.prototype.retry = function (mobileNumber, type) {
        var _this = this;
        if (type === void 0) { type = "text"; }
        return new Promise(function (resolve, reject) {
            var url = new URL("https://api.msg91.com/api/v5/otp/retry");
            url.searchParams.append("retrytype", type);
            url.searchParams.append("mobile", mobileNumber);
            url.searchParams.append("authkey", _this.authkey);
            url.searchParams.append("otp_length", String(_this.length));
            var config = {
                method: 'post',
                url: url.toString()
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data, status = _a.status;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    Otp.prototype.verify = function (mobileNumber, otp) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (!otp) {
                return reject(new Error("Provide OTP to verify"));
            }
            var url = new URL("https://api.msg91.com/api/v5/otp/verify");
            url.searchParams.append("otp", otp);
            url.searchParams.append("mobile", mobileNumber);
            url.searchParams.append("authkey", _this.authkey);
            var config = {
                method: 'post',
                url: url.toString(),
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data, status = _a.status;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    Otp.prototype.send = function (mobileNumber, options) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://api.msg91.com/api/v5/otp");
            if (options === null || options === void 0 ? void 0 : options.expiry)
                url.searchParams.append("otp_expiry", options === null || options === void 0 ? void 0 : options.expiry.toString());
            url.searchParams.append("template_id", (options === null || options === void 0 ? void 0 : options.templateId) || _this.templateId);
            url.searchParams.append("mobile", mobileNumber);
            url.searchParams.append("authkey", _this.authkey);
            url.searchParams.append("otp_length", String((options === null || options === void 0 ? void 0 : options.length) || _this.length));
            var config = {
                method: 'post',
                url: url.toString()
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    return Otp;
}());
var msg91 = (function () {
    var object = null;
    if (object) {
        return object;
    }
    else {
        return object = new Msg91();
    }
})();
exports.default = msg91;
